# defaults for any parameters that aren't specified
parameters:
  - name: rust
    type: string
    default: stable
  - name: components
    type: object
    default: []
  - name: targets
    type: object
    default: []
  - name: setupSteps
    type: stepList
    default: []

steps:
  ## First we need to configure how the project is pulled down

  - checkout: self
    lfs: true
    submodules: recursive
    fetchDepth: 0

  - bash: |
      cargo install cargo-deny
    displayName: "Install cargo-deny"

  ## Section for installing some extra stuff through rustup

  # Install additional targets:
  - ${{ each target in parameters.targets }}:
      - script: rustup target add ${{ target }}
        displayName: "Adding target '${{ target }}'"

  # Install additional components:
  - ${{ each component in parameters.components }}:
      - script: rustup component add ${{ component }}
        displayName: "Adding component '${{ component }}'"

  ## Dump the version info so we can debug what compiler version we're on

  # See what we got
  - pwsh: |
      rustc --version
      cargo --version
      rustup --version
    displayName: Check installed rust version

  ## Now we get to the user inserted part

  # Mark the next phase as the setup phase
  - script: |
      echo "Setup"
    displayName: Setup

  # Run w/e setup steps the user of the template wants
  - ${{ each step in parameters.setupSteps }}:
      - ${{ each pair in step }}:
          ${{ pair.key }}: ${{ pair.value }}
